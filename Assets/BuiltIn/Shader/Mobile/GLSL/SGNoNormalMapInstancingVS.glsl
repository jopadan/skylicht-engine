// File Generated by Assets/BuildShader.py - source: [SGVS.d.glsl : NO_NORMAL_MAP,AO,INSTANCING]
layout(location = 0) in vec4 inPosition;
layout(location = 1) in vec3 inNormal;
layout(location = 2) in vec4 inColor;
layout(location = 3) in vec2 inTexCoord0;
layout(location = 4) in vec3 inTangent;
layout(location = 5) in vec3 inBinormal;
layout(location = 6) in vec2 inData;
layout(location = 7) in vec4 uUVScale;
layout(location = 8) in vec4 uColor;
layout(location = 9) in vec4 uSpecGloss;
layout(location = 10) in mat4 uWorldMatrix;
uniform mat4 uVPMatrix;
uniform vec4 uCameraPosition;
uniform vec4 uLightDirection;
out vec2 vTexCoord0;
out vec3 vWorldNormal;
out vec3 vWorldViewDir;
out vec3 vWorldLightDir;
out vec3 vWorldTangent;
out vec3 vWorldBinormal;
out float vTangentW;
void main(void)
{
	vTexCoord0 = inTexCoord0 * uUVScale.xy + uUVScale.zw;
	vTangentW = inData.x;
	vec4 worldPos = uWorldMatrix * inPosition;
	vec4 worldViewDir = normalize(uCameraPosition - worldPos);
	vec4 worldNormal = uWorldMatrix * vec4(inNormal.xyz, 0.0);
	vec4 worldTangent = uWorldMatrix * vec4(inTangent.xyz, 0.0);
	vWorldNormal = normalize(worldNormal.xyz);
	vWorldTangent = normalize(worldTangent.xyz);
	vWorldBinormal = normalize(cross(worldNormal.xyz, worldTangent.xyz));
	vWorldViewDir = worldViewDir.xyz;
	vWorldLightDir = normalize(uLightDirection.xyz);
	gl_Position = uVPMatrix * worldPos;
}
