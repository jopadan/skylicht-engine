// File Generated by Assets/BuildShader.py - source: [BasicVfxFS.d.hlsl : UV2,SCROLL_UV2]
Texture2D uTexDiffuse1 : register(t0);
SamplerState uTex1Sampler : register(s0);
Texture2D uTexDiffuse2 : register(t1);
SamplerState uTex2Sampler : register(s1);
struct PS_INPUT
{
	float4 pos : SV_POSITION;
	float4 color : COLOR0;
	float2 tex0 : TEXCOORD0;
	float2 tex1 : TEXCOORD1;
};
cbuffer cbPerFrame
{
	float4 uColor;
	float4 uColorIntensity;
	float4 uTime;
};
float4 main(PS_INPUT input) : SV_TARGET
{
	float2 uvOffset = float2(uTime.x, 0.0) / 4.0;
	float4 color1 = uTexDiffuse1.Sample(uTex1Sampler, input.tex0);
	float4 color2 = uTexDiffuse2.Sample(uTex2Sampler, input.tex1 + uvOffset);
	float4 result = (color1 + color2) * uColor * input.color * uColorIntensity;
	result.a = color1.a * color2.a * uColor.a;
	return result;
}
