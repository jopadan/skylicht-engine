// File Generated by Assets/BuildShader.py - source: [DiffuseFS.hlsl : INSTANCING,TANGENT]
Texture2D uTexDiffuse : register(t0);
SamplerState uTexDiffuseSampler : register(s0);
struct PS_INPUT
{
	float4 pos : SV_POSITION;
	float2 tex0 : TEXCOORD0;
	float4 worldPosition: WORLDPOSITION;
	float3 worldNormal: WORLDNORMAL;
	float3 worldTangent: WORLDTANGENT;
	float3 worldBinormal: WORLDBINORMAL;
	float tangentw : TANGENTW;
	float4 color: COLOR;
	float2 specGloss: SPECGLOSS;
};
struct PS_OUTPUT
{
	float4 Diffuse: SV_TARGET0;
	float4 Position: SV_TARGET1;
	float4 Normal: SV_TARGET2;
	float4 SG: SV_TARGET3;
};
PS_OUTPUT main(PS_INPUT input)
{
	PS_OUTPUT output;
	float3 baseMap = uTexDiffuse.Sample(uTexDiffuseSampler, input.tex0).rgb;
	output.Diffuse = float4(baseMap * input.color.rgb, 1.0);
	output.Position = input.worldPosition;
	output.Normal = float4(input.worldNormal, 1.0);
	output.SG = float4(input.specGloss.x, input.specGloss.y, 0.0, 1.0);
	return output;
}
